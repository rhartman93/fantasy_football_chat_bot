name: Build image, test it, and publish if it passes

on:
  push:
    branches:
      - master
      - main
  release:
    types:
      - published

jobs:
  push-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract Python version from Dockerfile
        id: python_version
        run: |
          PYTHON_VER=$(grep -oP '^FROM python:\K[0-9]+\.[0-9]+\.[0-9]+' Dockerfile | head -1)
          echo "PYTHON_VERSION=$PYTHON_VER" >> $GITHUB_ENV

      - name: Set Docker image tags
        run: |
          IMAGE_BASE="ghcr.io/${GITHUB_REPOSITORY,,}"
          if [[ "${GITHUB_EVENT_NAME}" == "release" ]]; then
            SHA_TAG="${IMAGE_BASE}:${GITHUB_REF##*/}-python${PYTHON_VERSION}"
          else
            SHA_TAG="${IMAGE_BASE}:${GITHUB_SHA}-python${PYTHON_VERSION}"
          fi
          LATEST_TAG="${IMAGE_BASE}:latest"
          echo "TAGS=$SHA_TAG $LATEST_TAG" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ghcr.io/${GITHUB_REPOSITORY,,}:${GITHUB_SHA}-python${PYTHON_VERSION} -t ghcr.io/${GITHUB_REPOSITORY,,}:latest .



      - name: Test image
        run: |
          # Test the first tag (SHA/Python tag)
          FIRST_TAG=$(echo ${{ env.TAGS }} | awk '{print $1}')
          docker run --rm $FIRST_TAG /bin/sh -c "\
            python -m pip install --upgrade pip && \
            pip install -r requirements-test.txt && \
            pytest"

      - name: Push Docker image
        run: |
          # Convert TAGS (space-separated) into an array
          TAG_ARRAY=($TAGS)

          # Loop over each tag and push individually
          for tag in "${TAG_ARRAY[@]}"; do
            echo "Pushing $tag"
            docker push "$tag"
          done
